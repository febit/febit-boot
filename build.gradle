plugins {
  id 'com.github.hierynomus.license' version '0.16.1'
  id 'org.febit.standard-java' version '1.0.0-SNAPSHOT'
  id 'org.febit.codegen-module' version '1.0.0-SNAPSHOT' apply false
  id 'de.benediktritter.maven-plugin-development' version '0.4.0' apply false
}

group 'org.febit.jooq'
version '1.0.0-SNAPSHOT'

ext {

  versions = [
      jsr305             : '3.0.2',
      spotbugs           : '4.7.1',
      commonsIo          : '2.6',
      commonsLang3       : '3.12.0',
      commonsCompress    : '1.21',
      commonsCollections4: '4.4',
      commonsExec        : '1.3',
      assertj            : '3.22.0',
      springBoot         : '2.7.3',
      febitCommon        : '3.0.0-SNAPSHOT',
      febitGradleDevkit  : '1.0.0-SNAPSHOT',
  ]

}

allprojects {

  group rootProject.group
  version rootProject.version

  repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }
}

def javaModules() {
  subprojects.findAll {
    !it.name.endsWith('-bom')
  }
}

configure(javaModules()) {
  apply plugin: 'java-library'
  apply plugin: 'com.github.hierynomus.license'

  apply from: "${rootDir}/gradle/publish-maven.gradle"

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  test {
    useJUnitPlatform()
  }

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    strictCheck false
    skipExistingHeaders false
    header rootProject.file('etc/licenseheader.txt')
  }

  dependencies {
    compileOnly 'com.google.code.findbugs:jsr305'
    compileOnly 'com.github.spotbugs:spotbugs-annotations'

    testImplementation 'org.slf4j:slf4j-api'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  }

  dependencyManagement {
    resolutionStrategy {
      cacheChangingModulesFor 0, 'seconds'
    }
    imports {
      mavenBom "org.springframework.boot:spring-boot-dependencies:${versions.springBoot}"
    }
    dependencies {
      dependency "org.febit:febit-common:${versions.febitCommon}"
      dependency "org.febit.devkit-gradle:febit-devkit-gradle-common:${versions.febitGradleDevkit}"
      dependency "com.google.code.findbugs:jsr305:${versions.jsr305}"
      dependency "com.github.spotbugs:spotbugs-annotations:${versions.spotbugs}"
      dependency "org.apache.commons:commons-exec:${versions.commonsExec}"
      dependency "org.apache.commons:commons-compress:${versions.commonsCompress}"
      dependency "org.apache.commons:commons-lang3:${versions.commonsLang3}"
      dependency "org.apache.commons:commons-collections4:${versions.commonsCollections4}"
      dependency "commons-io:commons-io:${versions.commonsIo}"
      dependency "org.assertj:assertj-core:${versions.assertj}"

      dependency 'org.apache.maven:maven-plugin-api:3.0'
      dependency 'org.apache.maven:maven-core:3.0'
      dependency 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.5'
    }
  }

}
