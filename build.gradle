plugins {
  alias libs.plugins.febit.java
  alias libs.plugins.febit.maven.publish
  alias libs.plugins.febit.codegen.module
  alias libs.plugins.license
}

group 'org.febit.boot'
version '3.1.0-SNAPSHOT'

description = 'Febit Boot'

ext {
}

allprojects {
  apply plugin: 'com.github.hierynomus.license'

  group rootProject.group
  version rootProject.version

  repositories {
    maven { url "https://repo.huaweicloud.com/repository/maven" }
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  standardMavenPublish {
    pom {
      customPom(it)
    }
  }

  codegenModule {
    defaultTemplate = fromFile("$rootDir/etc/module.java.tmpl")
  }

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    exclude '**/*Mojo.java'
    strictCheck false
    skipExistingHeaders false
    header rootProject.file('etc/license-header.txt')
  }

  tasks.withType(AbstractPublishToMaven).configureEach {
    mustRunAfter tasks.withType(Sign)
  }
}

def STARTER_PREFIX = 'febit-boot-starter-'

configure(subprojects.findAll {
  !it.name.endsWith('-bom')
}) {
  apply plugin: 'java-library'

  def isStarter = name.startsWith(STARTER_PREFIX)

  java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    if (!isStarter) {
      withJavadocJar()
      withSourcesJar()
    }
  }

  test {
    useJUnitPlatform()
  }

  dependencies {
    compileOnly 'org.febit:febit-annotations-optional'
    testCompileOnly 'org.febit:febit-annotations-optional'

    testImplementation 'org.febit:febit-commons-test'
    testRuntimeOnly 'org.slf4j:slf4j-simple'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }

  dependencyManagement {
    resolutionStrategy {
      cacheChangingModulesFor 0, 'seconds'
    }
    imports {
      mavenBom "${libs.spring.boot.deps.get()}"
      mavenBom "${libs.spring.cloud.deps.get()}"
      mavenBom "${libs.febit.commons.deps.get()}"
    }
    dependencies {
      dependencySet(group: 'org.springdoc', version: "${libs.versions.springdoc.get()}") {
        entry 'springdoc-openapi-starter-common'
        entry 'springdoc-openapi-starter-webflux-api'
        entry 'springdoc-openapi-starter-webflux-ui'
        entry 'springdoc-openapi-starter-webmvc-api'
        entry 'springdoc-openapi-starter-webmvc-ui'
        entry 'springdoc-openapi-tests'
      }
      dependency "${libs.embedded.postgres.get()}"
      dependency "${libs.febit.gradle.common.get()}"
      dependency "${libs.nimbus.jose.jwt.get()}"
      dependency "${libs.swagger.annotations.get()}"
    }
  }

}

configure(subprojects.findAll {
  it.name.startsWith(STARTER_PREFIX)
}) {
  jar.manifest {
    attributes 'Spring-Boot-Jar-Type': 'dependencies-starter'
  }
}

def customPom(MavenPom pom) {
  pom.with {
    name.set project.name
    description.set project.description
    url = 'https://github.com/febit/febit-boot'
    organization {
      name = 'Febit'
      url = 'https://github.com/febit'
    }
    licenses {
      license {
        name = 'Apache License, Version 2.0'
        url = 'https://github.com/febit/febit-boot/blob/main/LICENSE.txt'
        distribution = 'repo'
      }
    }
    scm {
      url = 'https://github.com/febit/febit-boot'
      connection = 'scm:git:https://github.com/febit/febit-boot.git'
      developerConnection = 'scm:git:https://github.com/febit/febit-boot.git'
    }
    issueManagement {
      system = 'GitHub'
      url = 'https://github.com/febit/febit-boot/issues'
    }
    developers {
      developer {
        id = 'zqq'
        name = 'Zhu Qingqing'
        email = 'zqq@febit.org'
        timezone = '+8'
      }
    }
  }
}
