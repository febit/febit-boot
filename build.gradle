plugins {
  id 'com.github.hierynomus.license' version '0.16.1'
  id 'org.febit.standard-java' version '1.1.0-SNAPSHOT'
  id 'org.febit.standard-maven-publish' version '1.1.0-SNAPSHOT'
  id 'org.febit.codegen-module' version '1.1.0-SNAPSHOT'
  id 'de.benediktritter.maven-plugin-development' version '0.4.2' apply false
}

group 'org.febit.boot'
version '3.0.0-SNAPSHOT'

description = 'Febit Boot'

ext {

  versions = [
      commonsIo        : '2.13.0',
      commonsCompress    : '1.21',
      commonsCollections4: '4.4',
      commonsExec        : '1.3',

      febitCommons     : '3.0.0-SNAPSHOT',
      febitDevkitGradle: '1.1.0-SNAPSHOT',
      swagger3         : '2.2.15',
      springdoc        : '2.2.0',
      springBoot       : '3.1.2',
      springCloud      : '2022.0.4',

      embeddedPostgres : '2.0.4',
  ]

}

allprojects {
  apply plugin: 'com.github.hierynomus.license'

  group rootProject.group
  version rootProject.version

  repositories {
    maven { url "https://repo.huaweicloud.com/repository/maven" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  standardMavenPublish {
    pom {
      customPom(it)
    }
  }

  codegenModule {
    defaultTemplate = fromFile("$rootDir/etc/module.java.tmpl")
  }

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    exclude '**/*Mojo.java'
    strictCheck false
    skipExistingHeaders false
    header rootProject.file('etc/license-header.txt')
  }
}

configure(subprojects.findAll {
  !it.name.endsWith('-bom')
}) {
  apply plugin: 'java-library'

  java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    // withJavadocJar()
    withSourcesJar()
  }

  test {
    useJUnitPlatform()
  }

  dependencies {
    compileOnly 'org.febit:febit-annotations-optional'
    testCompileOnly 'org.febit:febit-annotations-optional'

    testImplementation 'org.febit:febit-test-common'
    testRuntimeOnly 'org.slf4j:slf4j-simple'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }

  dependencyManagement {
    resolutionStrategy {
      cacheChangingModulesFor 0, 'seconds'
    }
    imports {
      mavenBom "org.febit:febit-commons-bom:${versions.febitCommons}"
      mavenBom "org.springframework.boot:spring-boot-dependencies:${versions.springBoot}"
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}"
    }
    dependencies {
      dependencySet(group: 'org.springdoc', version: "${versions.springdoc}") {
        entry 'springdoc-openapi-starter-common'
        entry 'springdoc-openapi-starter-webmvc-api'
        entry 'springdoc-openapi-starter-webmvc-ui'
        entry 'springdoc-openapi-starter-webflux-api'
        entry 'springdoc-openapi-starter-webflux-ui'
        entry 'springdoc-openapi-tests'
      }
      dependency "org.febit.devkit.gradle:febit-gradle-common:${versions.febitDevkitGradle}"
      dependency "org.apache.commons:commons-exec:${versions.commonsExec}"
      dependency "org.apache.commons:commons-compress:${versions.commonsCompress}"
      dependency "org.apache.commons:commons-collections4:${versions.commonsCollections4}"
      dependency "commons-io:commons-io:${versions.commonsIo}"
      dependency "io.swagger.core.v3:swagger-annotations:${versions.swagger3}"
      dependency "io.zonky.test:embedded-postgres:${versions.embeddedPostgres}"

      dependency 'org.apache.maven:maven-plugin-api:3.0'
      dependency 'org.apache.maven:maven-core:3.0'
      dependency 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.5'
    }
  }

}

def customPom(MavenPom pom) {
  pom.with {
    url = 'https://github.com/febit/febit-boot'
    organization {
      name = 'Febit'
      url = 'https://github.com/febit'
    }
    licenses {
      license {
        name = 'Apache License, Version 2.0'
        url = 'https://github.com/febit/febit-boot/blob/main/LICENSE.txt'
        distribution = 'repo'
      }
    }
    scm {
      url = 'https://github.com/febit/febit-boot'
      connection = 'scm:git:https://github.com/febit/febit-boot.git'
      developerConnection = 'scm:git:https://github.com/febit/febit-boot.git'
    }
    issueManagement {
      system = 'GitHub'
      url = 'https://github.com/febit/febit-boot/issues'
    }
    developers {
      developer {
        id = 'zqq'
        name = 'Zhu Qingqing'
        email = 'zqq@febit.org'
        timezone = '+8'
      }
    }
  }
}
